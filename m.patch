diff --git a/res/layout/workspace_screen.xml b/res/layout/workspace_screen.xml
index 324c155..6137a6e 100644
--- a/res/layout/workspace_screen.xml
+++ b/res/layout/workspace_screen.xml
@@ -2,5 +2,5 @@
 <com.obigo.f10.CellLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent" >
-    
-</com.obigo.f10.CellLayout>
+
+</com.obigo.f10.CellLayout>
\ No newline at end of file
diff --git a/src/com/obigo/f10/CellLayout.java b/src/com/obigo/f10/CellLayout.java
index ed74022..d44c196 100644
--- a/src/com/obigo/f10/CellLayout.java
+++ b/src/com/obigo/f10/CellLayout.java
@@ -177,24 +177,6 @@ public class CellLayout extends ViewGroup implements OnDoubleTapListener {
     @Override
     public boolean onDoubleTap(MotionEvent e) {
         if (mDblTapListener != null) {
-//            final float x = e.getX();
-//            final float y = e.getY();
-//
-//            int width  = ((View) getParent()).getWidth() / 2;
-//            int height = ((View) getParent()).getHeight() / 2;
-//            int position;
-//            Log.d(TAG, "width " + width + ", height " + height);
-//
-//            if (x < width && y < height) {
-//                position = OnCellDoubleTapListener.TOP_LEFT;
-//            } else if (x > width && y > height) {
-//                position = OnCellDoubleTapListener.TOP_RIGHT;
-//            } else if (x < width && y > height) {
-//                position = OnCellDoubleTapListener.BOTTOM_LEFT;
-//            } else {
-//                position = OnCellDoubleTapListener.BOTTOM_RIGHT;
-//            }
-
             mDblTapListener.onDoubleTap(this);
         }
 
diff --git a/src/com/obigo/f10/MainActivity.java b/src/com/obigo/f10/MainActivity.java
index bf6e7d5..e304af0 100644
--- a/src/com/obigo/f10/MainActivity.java
+++ b/src/com/obigo/f10/MainActivity.java
@@ -59,6 +59,8 @@ public class MainActivity extends FragmentActivity implements View.OnClickListen
             if ((intent.getFlags() & Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT) != Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT) {
                 if (isWorkspaceLocked()) {
                     onBackPressed();
+                } else if (mWorkspace.isFullScreenMode()) {
+                    mWorkspace.resetScreenMode();
                 } else {
                     mWorkspace.snapToScreen(0);
                 }
diff --git a/src/com/obigo/f10/Workspace.java b/src/com/obigo/f10/Workspace.java
index 16d049f..d4f5e09 100644
--- a/src/com/obigo/f10/Workspace.java
+++ b/src/com/obigo/f10/Workspace.java
@@ -28,7 +28,7 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
 
     private IDragController mDragger;
     private OnLongClickListener mLongClickListener;
-    private boolean mFullSizeMode = false;
+    private boolean mFullScreenMode = false;
     private int mDoubleTapPosition;
 
     public Workspace(Context context, AttributeSet attrs) {
@@ -44,7 +44,7 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
 
     private void initLayout() {
         setHapticFeedbackEnabled(false);
-        setChildWidth(true);
+        setScrollByChildWidth(true);
         setBeastSwipeMode(true);
         setEdgeEventMode(true);
 
@@ -111,15 +111,27 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
         }
     }
 
-    public void setFullSizeCell(boolean fullsize) {
-        setBeastSwipeMode(!fullsize);
-        setEdgeEventMode(!fullsize);
-        setChildWidth(!fullsize);
-        mFullSizeMode = fullsize;
+    private void setFullScreenMode(boolean mode) {
+        setBeastSwipeMode(!mode);
+        setEdgeEventMode(!mode);
+        setScrollByChildWidth(!mode);
+        mFullScreenMode = mode;
 
         requestLayout();
     }
 
+    public void resetScreenMode() {
+        if (mCurrentScreen > 0 && mDoubleTapPosition == OnCellDoubleTapListener.LEFT_TOP) {
+            mCurrentScreen = mCurrentScreen / 2 + 1;
+        } else if (mDoubleTapPosition == OnCellDoubleTapListener.RIGHT_BOTTOM) {
+            mCurrentScreen = mCurrentScreen / 2 - 1;
+        } else {
+            mCurrentScreen = mCurrentScreen / 2;
+        }
+
+        setFullScreenMode(false);
+    }
+
     ////////////////////////////////////////////////////////////////////////////////////
     //
     // LAYOUT OVERRIDE
@@ -131,7 +143,7 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);
 
         int width = MeasureSpec.getSize(widthMeasureSpec);
-        if (!mFullSizeMode) {
+        if (!mFullScreenMode) {
             width /= 2;
         }
 
@@ -148,7 +160,7 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
 
         // The children are given the same width and height as the workspace
         final int count = getChildCount();
-        if (mFullSizeMode) {
+        if (mFullScreenMode) {
             for (int i = 0; i < count; i++) {
                 getChildAt(i).measure(widthMeasureSpec, heightMeasureSpec);
             }
@@ -184,7 +196,7 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
 
         final int count = getChildCount();
 
-        if (mFullSizeMode) {
+        if (mFullScreenMode) {
             for (int i = 0; i < count; i++) {
                 final View child = getChildAt(i);
                 if (child.getVisibility() != View.GONE) {
@@ -194,11 +206,6 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
                     childLeft += childWidth;
                 }
             }
-
-//            Log.d(TAG, "===================================================================");
-//            Log.d(TAG, "width " + getWidth());
-//            Log.d(TAG, "measure size " + getMeasuredWidth());
-//            Log.d(TAG, "===================================================================");
         } else {
             for (int i = 0; i < count; i++) {
                 final View child = getChildAt(i);
@@ -229,7 +236,7 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
         final int action = ev.getAction();
         switch (action & MotionEvent.ACTION_MASK) {
         case MotionEvent.ACTION_UP:
-            if (mTouchState != TOUCH_STATE_SCROLLING && !mFullSizeMode) {
+            if (mTouchState != TOUCH_STATE_SCROLLING && !mFullScreenMode) {
                 setPositionDoubleTap(ev.getX(), ev.getY());
             }
 
@@ -261,7 +268,7 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
 
     @Override
     public int getScreenCount() {
-        if (mFullSizeMode) {
+        if (mFullScreenMode) {
             return getChildCount();
         } else {
             if (getChildCount() == 1) {
@@ -282,23 +289,44 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
         }
     }
 
+    @Override
+    protected void snapToScreen(int whichScreen, int velocity, boolean settle) {
+        super.snapToScreen(whichScreen, velocity, settle);
+
+        if (mFullScreenMode) {
+//            Log.d(TAG, "next screen " + mNextScreen + ", current " + mCurrentScreen);
+
+            if (mCurrentScreen < mNextScreen) {
+                ++mDoubleTapPosition;
+                mDoubleTapPosition %= 4;
+            } else if (mCurrentScreen > mNextScreen) {
+                --mDoubleTapPosition;
+                mDoubleTapPosition %= 4;
+            }
+        }
+    }
+
     private void setPositionDoubleTap(float x, float y) {
         float width  = getWidth() / 2;
         float height = getHeight() / 2;
 
-        Log.d(TAG, "x " + x + ",y " + y);
+//        Log.d(TAG, "x " + x + ",y " + y);
 
         if (x < width && y < height) {
-            mDoubleTapPosition = OnCellDoubleTapListener.TOP_LEFT;
+            mDoubleTapPosition = OnCellDoubleTapListener.LEFT_TOP;
         } else if (x > width && y < height) {
-            mDoubleTapPosition = OnCellDoubleTapListener.TOP_RIGHT;
+            mDoubleTapPosition = OnCellDoubleTapListener.RIGHT_TOP;
         } else if (x < width && y > height) {
-            mDoubleTapPosition = OnCellDoubleTapListener.BOTTOM_LEFT;
+            mDoubleTapPosition = OnCellDoubleTapListener.LEFT_BOTTOM;
         } else {
-            mDoubleTapPosition = OnCellDoubleTapListener.BOTTOM_RIGHT;
+            mDoubleTapPosition = OnCellDoubleTapListener.RIGHT_BOTTOM;
         }
     }
 
+    public boolean isFullScreenMode() {
+        return mFullScreenMode;
+    }
+
     ////////////////////////////////////////////////////////////////////////////////////
     //
     // DRAG
@@ -352,28 +380,14 @@ public class Workspace extends BkViewPager implements DropTarget, IDragSource ,
 
     @Override
     public void onDoubleTap(View view) {
-        Log.d(TAG, "double tap pos " + mDoubleTapPosition);
-        if (!mFullSizeMode) {
+        if (!mFullScreenMode) {
             for (int i=0; i<getChildCount(); ++i) {
                 if (getChildAt(i).equals(view)) {
                     mCurrentScreen = i;
                 }
             }
 
-            setFullSizeCell(true);
-        } else {
-            Log.d(TAG, "current screen " + mCurrentScreen);
-            if (mCurrentScreen > 0 && mDoubleTapPosition == OnCellDoubleTapListener.TOP_LEFT) {
-                mCurrentScreen = mCurrentScreen / 2 + 1;
-
-                Log.d(TAG, "current size " + mCurrentScreen);
-            } else if (mDoubleTapPosition == OnCellDoubleTapListener.BOTTOM_RIGHT) {
-                mCurrentScreen = mCurrentScreen / 2 - 1;
-            } else {
-                mCurrentScreen = mCurrentScreen / 2;
-            }
-
-            setFullSizeCell(false);
+            setFullScreenMode(true);
         }
     }
 }
diff --git a/src/com/obigo/f10/ui/BkViewPager.java b/src/com/obigo/f10/ui/BkViewPager.java
index 9fa473f..0ded533 100644
--- a/src/com/obigo/f10/ui/BkViewPager.java
+++ b/src/com/obigo/f10/ui/BkViewPager.java
@@ -43,7 +43,7 @@ public class BkViewPager extends ViewGroup {
     protected boolean mFirstLayout = true;
 
     protected int mCurrentScreen;
-    private int mNextScreen = INVALID_SCREEN;
+    protected int mNextScreen = INVALID_SCREEN;
     private Scroller mScroller;
     protected VelocityTracker mVelocityTracker;
 
@@ -73,12 +73,12 @@ public class BkViewPager extends ViewGroup {
     private static final float BASELINE_FLING_VELOCITY = 2500.f;
     private static final float FLING_VELOCITY_INFLUENCE = 0.4f;
 
-    private boolean mChildWidth = false;
+    private boolean mScrolllByChildWidth = false;
     private boolean mBeastMode = false;
     private boolean mEdgeEventMode = false;
 
     private float mEdgeMotion = 130.0f;
-    private float mEdgeMotionX;
+    private float mEdgeMotionX, mEdgeMotionY;
     public static final int EDGE_EVENT_LEFT = 1;
     public static final int EDGE_EVENT_TOP = 2;
 
@@ -276,6 +276,7 @@ public class BkViewPager extends ViewGroup {
                     mTouchState = TOUCH_STATE_SCROLLING;
                     mLastMotionX = x;
                     mEdgeMotionX = x;
+                    mEdgeMotionY = y;
 
 //                    Log.d(TAG, "mEdgeMotionX = " + mEdgeMotionX);
                     mTouchX = getScrollX();
@@ -397,12 +398,15 @@ public class BkViewPager extends ViewGroup {
                 final int pointerIndex = ev.findPointerIndex(mActivePointerId);
                 final float x = ev.getX(pointerIndex);
                 final float deltaX = mLastMotionX - x;
+                final float y = ev.getY(pointerIndex);
+                final float deltaY = mLastMotionY - y;
 
 //                Log.d(TAG, "touch mEdgeMotionX " + mEdgeMotionX);
+//                Log.d(TAG, "deltaY " + deltaY);
 
                 if (mEdgeEventMode && mEdgeMotionX < mEdgeMotion) {
                     onEdgeEvent(EDGE_EVENT_LEFT);
-                } else if (mEdgeEventMode && mLastMotionY < mEdgeMotion) {
+                } else if (mEdgeEventMode && mEdgeMotionY < mEdgeMotion && deltaY < -60) {
 //                    Log.d(TAG, "edge event top");
                     onEdgeEvent(EDGE_EVENT_TOP);
                 } else {
@@ -434,7 +438,7 @@ public class BkViewPager extends ViewGroup {
                 velocityTracker.computeCurrentVelocity(1000, mMaximumVelocity);
                 final int velocityX = (int) velocityTracker.getXVelocity(mActivePointerId);
 
-                final int screenWidth = mChildWidth ? getWidth() / 2 : getWidth();
+                final int screenWidth = mScrolllByChildWidth ? getWidth() / 2 : getWidth();
                 final int whichScreen = (getScrollX() + (screenWidth / 2)) / screenWidth;
                 final float scrolledPos = (float) getScrollX() / screenWidth;
 
@@ -505,7 +509,7 @@ public class BkViewPager extends ViewGroup {
         return getChildCount();
     }
 
-    private void snapToScreen(int whichScreen, int velocity, boolean settle) {
+    protected void snapToScreen(int whichScreen, int velocity, boolean settle) {
         whichScreen = Math.max(0, Math.min(whichScreen, getScreenCount() - 1));
 
         clearVacantCache();
@@ -522,7 +526,7 @@ public class BkViewPager extends ViewGroup {
         }
 
         final int screenDelta = Math.max(1, Math.abs(whichScreen - mCurrentScreen));
-        final int newX = whichScreen * (mChildWidth ? getWidth() / 2 : getWidth());
+        final int newX = whichScreen * (mScrolllByChildWidth ? getWidth() / 2 : getWidth());
         final int delta = newX - getScrollX();
         int duration = (screenDelta + 1) * 100;
 
@@ -632,8 +636,8 @@ public class BkViewPager extends ViewGroup {
         }
     }
 
-    public void setChildWidth(boolean childWidth) {
-        mChildWidth = childWidth;
+    public void setScrollByChildWidth(boolean childWidth) {
+        mScrolllByChildWidth = childWidth;
     }
 
     public void setBeastSwipeMode(boolean beastMode) {
diff --git a/src/com/obigo/f10/ui/events/OnCellDoubleTapListener.java b/src/com/obigo/f10/ui/events/OnCellDoubleTapListener.java
index f9b6351..a6691ad 100644
--- a/src/com/obigo/f10/ui/events/OnCellDoubleTapListener.java
+++ b/src/com/obigo/f10/ui/events/OnCellDoubleTapListener.java
@@ -9,10 +9,10 @@ import android.view.View;
 
 
 public interface OnCellDoubleTapListener {
-    public static final int TOP_LEFT = 0;
-    public static final int TOP_RIGHT = 1;
-    public static final int BOTTOM_LEFT = 2;
-    public static final int BOTTOM_RIGHT = 3;
+    public static final int LEFT_TOP = 0;
+    public static final int LEFT_BOTTOM = 1;
+    public static final int RIGHT_TOP = 2;
+    public static final int RIGHT_BOTTOM = 3;
 
     public void onDoubleTap(View view);
 }
